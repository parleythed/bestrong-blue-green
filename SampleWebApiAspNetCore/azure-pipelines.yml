trigger:
  branches:
    include:
      - main

pr:
  branches:
    include:
      - main

variables:
  azureSubscription: 'AzureServiceConnection'        # Your Azure DevOps service connection name
  dockerRegistry: 'bestrongacr.azurecr.io'           # Your ACR login server
  imageName: 'aspnetcore-webapi'                     # Your Docker image name
  appServiceName: 'BeStrongWebApp'                   # Your Azure Web App name
  tag: '$(Build.BuildId)'                            # Use Build ID as the Docker image tag

jobs:
- job: BuildAndPushDockerImage
  displayName: 'Build and Push Docker Image to ACR'
  pool:
    vmImage: 'ubuntu-latest'
  steps:
    # Checkout the code
    - task: Checkout@1

    # Install .NET SDK
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '6.0.x'
        installationPath: $(Agent.ToolsDirectory)/dotnet

    # Build the Docker image
    - script: |
        docker build -t $(dockerRegistry)/$(imageName):$(tag) .
      displayName: 'Build Docker Image'

    # Log in to ACR
    - script: |
        echo "$(ACR_PASSWORD)" | docker login $(dockerRegistry) -u $(ACR_USERNAME) --password-stdin
      displayName: 'Log in to ACR'

    # Push the Docker image to ACR
    - script: |
        docker push $(dockerRegistry)/$(imageName):$(tag)
      displayName: 'Push Docker Image to ACR'

- job: DeployToAzureAppService
  displayName: 'Deploy Docker Image to Azure App Service'
  dependsOn: BuildAndPushDockerImage
  pool:
    vmImage: 'ubuntu-latest'
  steps:
    - task: AzureWebAppContainer@1
      inputs:
        azureSubscription: $(azureSubscription)
        appName: $(appServiceName)
        containerRegistry: $(dockerRegistry)
        imageName: '$(imageName):$(tag)'
        package: ''
