trigger:
  branches:
    include:
      - main

pr:
  branches:
    include:
      - main

variables:
  - group: AllCredentials

stages:
  - stage: BuildAndValidate
    displayName: Build and Validate
    jobs:
      - job: HelmPackageAndTerraformValidate
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: Bash@3
            displayName: "Install Tools"
            inputs:
              targetType: 'inline'
              script: |
                # Install Azure CLI
                curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
                
                # Install Terraform
                TERRAFORM_VERSION="1.9.8"
                wget https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip
                unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip
                sudo mv terraform /usr/local/bin/
                
                # Install Helm
                curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

          - task: AzureCLI@2
            displayName: "Azure Login"
            inputs:
              azureSubscription: '$(ARM_SERVICE_CONNECTION)'
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                az account show
                az account set --subscription $(ARM_SUBSCRIPTION_ID)

          - task: Bash@3
            displayName: "Terraform Validate"
            inputs:
              targetType: 'inline'
              script: |
                cd ./terraform
                terraform init -backend=true
                terraform validate
                terraform fmt -check

          - task: Bash@3
            displayName: "Package Helm Chart"
            inputs:
              targetType: 'inline'
              script: |
                cd helm  # Adjust path to your Helm chart directory
                helm package .
                helm lint

  - stage: BuildAndPushArtifacts
    displayName: Build and Push Artifacts
    jobs:
      - job: HelmChartAndContainerBuild
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: AzureCLI@2
            displayName: "Azure Login"
            inputs:
              azureSubscription: '$(ARM_SERVICE_CONNECTION)'
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                az account set --subscription $(ARM_SUBSCRIPTION_ID)
                az acr login -n $(ACR_NAME)

          - task: Bash@3
            displayName: "Helm Chart Push to ACR"
            inputs:
              targetType: 'inline'
              script: |
                cd ./helm-charts
                helm package .
                helm push $(HELM_CHART_NAME)-*.tgz oci://$(ACR_NAME).azurecr.io/helm

  - stage: DeployToProduction
    displayName: Deploy to Production
    dependsOn: 
      - BuildAndValidate
      - BuildAndPushArtifacts
    condition: succeeded()
    jobs:
      - deployment: DeployToAKS
        pool:
          vmImage: 'ubuntu-latest'
        environment: 'Production'
        strategy:
          runOnce:
            deploy:
              steps:
                - task: AzureCLI@2
                  displayName: "Azure Login and AKS Deploy"
                  inputs:
                    azureSubscription: '$(ARM_SERVICE_CONNECTION)'
                    scriptType: bash
                    scriptLocation: inlineScript
                    inlineScript: |
                      # Authenticate to AKS
                      az aks get-credentials --resource-group $(RESOURCE_GROUP) --name $(AKS_NAME)

                      # Deploy Helm Chart
                      helm repo add myrepo oci://$(ACR_NAME).azurecr.io/helm
                      helm repo update
                      
                      helm upgrade --install $(HELM_CHART_NAME) myrepo/$(HELM_CHART_NAME) \
                        --version $(CHART_VERSION) \
                        --set ingress.host=$(DOMAIN)